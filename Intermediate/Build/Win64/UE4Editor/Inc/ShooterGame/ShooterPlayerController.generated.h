// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FKey;
struct FVector;
struct FRotator;
#ifdef SHOOTERGAME_ShooterPlayerController_generated_h
#error "ShooterPlayerController.generated.h already included, missing '#pragma once' in ShooterPlayerController.h"
#endif
#define SHOOTERGAME_ShooterPlayerController_generated_h

#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_RPC_WRAPPERS \
	virtual bool ServerSuicide_Validate(); \
	virtual void ServerSuicide_Implementation(); \
	virtual bool ServerSay_Validate(const FString& ); \
	virtual void ServerSay_Implementation(const FString& Msg); \
	virtual bool ServerCheat_Validate(const FString& ); \
	virtual void ServerCheat_Implementation(const FString& Msg); \
	virtual void ClientSendRoundEndEvent_Implementation(bool bIsWinner, int32 ExpendedTimeInSeconds); \
	virtual void ClientEndOnlineGame_Implementation(); \
	virtual void ClientStartOnlineGame_Implementation(); \
	virtual void ClientGameStarted_Implementation(); \
	virtual void ClientSetSpectatorCamera_Implementation(FVector CameraLocation, FRotator CameraRotation); \
 \
	DECLARE_FUNCTION(execServerSuicide) \
	{ \
		P_FINISH; \
		if (!this->ServerSuicide_Validate()) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSuicide_Validate")); \
			return; \
		} \
		this->ServerSuicide_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execSuicide) \
	{ \
		P_FINISH; \
		this->Suicide(); \
	} \
 \
	DECLARE_FUNCTION(execSetGodMode) \
	{ \
		P_GET_UBOOL(Z_Param_bEnable); \
		P_FINISH; \
		this->SetGodMode(Z_Param_bEnable); \
	} \
 \
	DECLARE_FUNCTION(execServerSay) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Msg); \
		P_FINISH; \
		if (!this->ServerSay_Validate(Z_Param_Msg)) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSay_Validate")); \
			return; \
		} \
		this->ServerSay_Implementation(Z_Param_Msg); \
	} \
 \
	DECLARE_FUNCTION(execSay) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Msg); \
		P_FINISH; \
		this->Say(Z_Param_Msg); \
	} \
 \
	DECLARE_FUNCTION(execServerCheat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Msg); \
		P_FINISH; \
		if (!this->ServerCheat_Validate(Z_Param_Msg)) \
		{ \
			RPC_ValidateFailed(TEXT("ServerCheat_Validate")); \
			return; \
		} \
		this->ServerCheat_Implementation(Z_Param_Msg); \
	} \
 \
	DECLARE_FUNCTION(execSimulateInputKey) \
	{ \
		P_GET_STRUCT(FKey,Z_Param_Key); \
		P_GET_UBOOL(Z_Param_bPressed); \
		P_FINISH; \
		this->SimulateInputKey(Z_Param_Key,Z_Param_bPressed); \
	} \
 \
	DECLARE_FUNCTION(execClientSendRoundEndEvent) \
	{ \
		P_GET_UBOOL(Z_Param_bIsWinner); \
		P_GET_PROPERTY(UIntProperty,Z_Param_ExpendedTimeInSeconds); \
		P_FINISH; \
		this->ClientSendRoundEndEvent_Implementation(Z_Param_bIsWinner,Z_Param_ExpendedTimeInSeconds); \
	} \
 \
	DECLARE_FUNCTION(execClientEndOnlineGame) \
	{ \
		P_FINISH; \
		this->ClientEndOnlineGame_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execClientStartOnlineGame) \
	{ \
		P_FINISH; \
		this->ClientStartOnlineGame_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execClientGameStarted) \
	{ \
		P_FINISH; \
		this->ClientGameStarted_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execClientSetSpectatorCamera) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_CameraLocation); \
		P_GET_STRUCT(FRotator,Z_Param_CameraRotation); \
		P_FINISH; \
		this->ClientSetSpectatorCamera_Implementation(Z_Param_CameraLocation,Z_Param_CameraRotation); \
	}


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_RPC_WRAPPERS_NO_PURE_DECLS \
	virtual bool ServerSuicide_Validate(); \
	virtual void ServerSuicide_Implementation(); \
	virtual bool ServerSay_Validate(const FString& ); \
	virtual void ServerSay_Implementation(const FString& Msg); \
	virtual bool ServerCheat_Validate(const FString& ); \
	virtual void ServerCheat_Implementation(const FString& Msg); \
	virtual void ClientSendRoundEndEvent_Implementation(bool bIsWinner, int32 ExpendedTimeInSeconds); \
	virtual void ClientEndOnlineGame_Implementation(); \
	virtual void ClientStartOnlineGame_Implementation(); \
	virtual void ClientGameStarted_Implementation(); \
	virtual void ClientSetSpectatorCamera_Implementation(FVector CameraLocation, FRotator CameraRotation); \
 \
	DECLARE_FUNCTION(execServerSuicide) \
	{ \
		P_FINISH; \
		if (!this->ServerSuicide_Validate()) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSuicide_Validate")); \
			return; \
		} \
		this->ServerSuicide_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execSuicide) \
	{ \
		P_FINISH; \
		this->Suicide(); \
	} \
 \
	DECLARE_FUNCTION(execSetGodMode) \
	{ \
		P_GET_UBOOL(Z_Param_bEnable); \
		P_FINISH; \
		this->SetGodMode(Z_Param_bEnable); \
	} \
 \
	DECLARE_FUNCTION(execServerSay) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Msg); \
		P_FINISH; \
		if (!this->ServerSay_Validate(Z_Param_Msg)) \
		{ \
			RPC_ValidateFailed(TEXT("ServerSay_Validate")); \
			return; \
		} \
		this->ServerSay_Implementation(Z_Param_Msg); \
	} \
 \
	DECLARE_FUNCTION(execSay) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Msg); \
		P_FINISH; \
		this->Say(Z_Param_Msg); \
	} \
 \
	DECLARE_FUNCTION(execServerCheat) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_Msg); \
		P_FINISH; \
		if (!this->ServerCheat_Validate(Z_Param_Msg)) \
		{ \
			RPC_ValidateFailed(TEXT("ServerCheat_Validate")); \
			return; \
		} \
		this->ServerCheat_Implementation(Z_Param_Msg); \
	} \
 \
	DECLARE_FUNCTION(execSimulateInputKey) \
	{ \
		P_GET_STRUCT(FKey,Z_Param_Key); \
		P_GET_UBOOL(Z_Param_bPressed); \
		P_FINISH; \
		this->SimulateInputKey(Z_Param_Key,Z_Param_bPressed); \
	} \
 \
	DECLARE_FUNCTION(execClientSendRoundEndEvent) \
	{ \
		P_GET_UBOOL(Z_Param_bIsWinner); \
		P_GET_PROPERTY(UIntProperty,Z_Param_ExpendedTimeInSeconds); \
		P_FINISH; \
		this->ClientSendRoundEndEvent_Implementation(Z_Param_bIsWinner,Z_Param_ExpendedTimeInSeconds); \
	} \
 \
	DECLARE_FUNCTION(execClientEndOnlineGame) \
	{ \
		P_FINISH; \
		this->ClientEndOnlineGame_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execClientStartOnlineGame) \
	{ \
		P_FINISH; \
		this->ClientStartOnlineGame_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execClientGameStarted) \
	{ \
		P_FINISH; \
		this->ClientGameStarted_Implementation(); \
	} \
 \
	DECLARE_FUNCTION(execClientSetSpectatorCamera) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_CameraLocation); \
		P_GET_STRUCT(FRotator,Z_Param_CameraRotation); \
		P_FINISH; \
		this->ClientSetSpectatorCamera_Implementation(Z_Param_CameraLocation,Z_Param_CameraRotation); \
	}


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_EVENT_PARMS \
	struct ShooterPlayerController_eventClientSendRoundEndEvent_Parms \
	{ \
		bool bIsWinner; \
		int32 ExpendedTimeInSeconds; \
	}; \
	struct ShooterPlayerController_eventClientSetSpectatorCamera_Parms \
	{ \
		FVector CameraLocation; \
		FRotator CameraRotation; \
	}; \
	struct ShooterPlayerController_eventServerCheat_Parms \
	{ \
		FString Msg; \
	}; \
	struct ShooterPlayerController_eventServerSay_Parms \
	{ \
		FString Msg; \
	};


extern SHOOTERGAME_API  FName SHOOTERGAME_ClientEndOnlineGame;
extern SHOOTERGAME_API  FName SHOOTERGAME_ClientGameStarted;
extern SHOOTERGAME_API  FName SHOOTERGAME_ClientSendRoundEndEvent;
extern SHOOTERGAME_API  FName SHOOTERGAME_ClientSetSpectatorCamera;
extern SHOOTERGAME_API  FName SHOOTERGAME_ClientStartOnlineGame;
extern SHOOTERGAME_API  FName SHOOTERGAME_ServerCheat;
extern SHOOTERGAME_API  FName SHOOTERGAME_ServerSay;
extern SHOOTERGAME_API  FName SHOOTERGAME_ServerSuicide;
#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_CALLBACK_WRAPPERS
#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesAShooterPlayerController(); \
	friend SHOOTERGAME_API class UClass* Z_Construct_UClass_AShooterPlayerController(); \
	public: \
	DECLARE_CLASS(AShooterPlayerController, APlayerController, COMPILED_IN_FLAGS(0 | CLASS_Config), 0, ShooterGame, NO_API) \
	DECLARE_SERIALIZER(AShooterPlayerController) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<AShooterPlayerController*>(this); } \
	void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const override;


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_INCLASS \
	private: \
	static void StaticRegisterNativesAShooterPlayerController(); \
	friend SHOOTERGAME_API class UClass* Z_Construct_UClass_AShooterPlayerController(); \
	public: \
	DECLARE_CLASS(AShooterPlayerController, APlayerController, COMPILED_IN_FLAGS(0 | CLASS_Config), 0, ShooterGame, NO_API) \
	DECLARE_SERIALIZER(AShooterPlayerController) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<AShooterPlayerController*>(this); } \
	void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const override;


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API AShooterPlayerController(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AShooterPlayerController) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AShooterPlayerController); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AShooterPlayerController); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API AShooterPlayerController(const AShooterPlayerController& InCopy); \
public:


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API AShooterPlayerController(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API AShooterPlayerController(const AShooterPlayerController& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, AShooterPlayerController); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(AShooterPlayerController); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(AShooterPlayerController)


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_10_PROLOG \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_EVENT_PARMS


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_RPC_WRAPPERS \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_CALLBACK_WRAPPERS \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_INCLASS \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_RPC_WRAPPERS_NO_PURE_DECLS \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_CALLBACK_WRAPPERS \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_INCLASS_NO_PURE_DECLS \
	ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h_13_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class ShooterPlayerController."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID ShooterGame_Source_ShooterGame_Public_Player_ShooterPlayerController_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
